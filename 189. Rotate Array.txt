Brute force method: Time complexity= O(n^2):
Problem: only solves 37/38 test cases. Time limit exceeds for larger test cases.

class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        while (k>0):
            temp=nums[-1]
            i=len(nums)-1
            while(i>0):
                nums[i]=nums[i-1]
                i=i-1
            nums[0]=temp
            k=k-1


Using list properties and method: O(n)

class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
	k=k%len(nums)
        x=(-1)*k
        t=nums[:x]
        nums[:x]=[]
        nums.extend(t)