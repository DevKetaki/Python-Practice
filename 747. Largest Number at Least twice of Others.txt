Intution: If the largest number is greater than twice the second largest, it is obviously greater than twice of every other element. So just check with second largest element

Brute force approach: TC- O(n log n)
sort the elements in ascending order, take largest as nums[len(nums)-1] and secondlargest as nums[len(nums)-2] compare 

Optimal approach: TC- O (n)

class Solution:
    def dominantIndex(self, nums: List[int]) -> int:
        lar=nums[0]
        pos=0
        seclar=-1
        for i in range(1,len(nums)):
            if(nums[i]>lar):
                seclar=lar
                lar=nums[i]
                pos=i
            elif(nums[i]>seclar):
                seclar=nums[i]
        if (lar>=(2*seclar)):
            return pos
        return -1