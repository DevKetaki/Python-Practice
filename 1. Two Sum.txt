My solution: 


class Solution: O(n^2)
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        i=0
        sol=list()
        while (i<len(nums)-1):
            j=i+1
            while(j<len(nums)):
                if(nums[i]+nums[j]==target):
                    sol.append(i)
                    sol.append(j)
                    break
                else:
                    j=j+1
            i=i+1
        return(sol)


Better soln:

class Solution: 
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        hashmap={}
        for i, num in enumerate(nums):
            if target - num in hashmap:
                return[i,hashmap[target - num]]
            hashmap[num]=i